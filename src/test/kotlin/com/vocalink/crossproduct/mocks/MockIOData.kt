package com.vocalink.crossproduct.mocks

import com.vocalink.crossproduct.domain.io.IOData
import com.vocalink.crossproduct.domain.io.ParticipantIOData
import com.vocalink.crossproduct.domain.participant.ParticipantStatus
import com.vocalink.crossproduct.shared.io.CPIOData
import com.vocalink.crossproduct.shared.io.CPParticipantIOData
import com.vocalink.crossproduct.ui.dto.IODashboardDto
import com.vocalink.crossproduct.ui.dto.io.IODataDto
import com.vocalink.crossproduct.ui.dto.io.ParticipantIODataDto
import com.vocalink.crossproduct.ui.dto.participant.ParticipantDto
import java.time.LocalDate

class MockIOData {
    val ioDashboardDto = IODashboardDto.builder()
            .rows(getParticipantsIODataDto())
            .batchesRejected("2.00")
            .filesRejected("2.00")
            .transactionsRejected("2.00")
            .dateFrom(LocalDate.now())
            .build()

    val cpParticipantIOData = listOf(
            CPParticipantIOData.builder()
                    .participantId("ESSESESS")
                    .batches(CPIOData.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .files(CPIOData.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .transactions(CPIOData.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .build(),
            CPParticipantIOData.builder()
                    .participantId("HANDSESS")
                    .batches(CPIOData.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .files(CPIOData.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .transactions(CPIOData.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .build(),
            CPParticipantIOData.builder()
                    .participantId("NDEASESSXXX")
                    .batches(CPIOData.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .files(CPIOData.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .transactions(CPIOData.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .build())

    fun getParticipantsIODataDto() = listOf(
            ParticipantIODataDto.builder()
                    .participant(ParticipantDto.builder()
                            .id("ESSESESS")
                            .bic("ESSESESS")
                            .name("SEB Bank")
                            .suspendedTime(null)
                            .status(ParticipantStatus.ACTIVE)
                            .build())
                    .batches(IODataDto.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .files(IODataDto.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build()).transactions(IODataDto.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .build(),
            ParticipantIODataDto.builder()
                    .participant(MockParticipants().getParticipantDto(true))
                    .batches(IODataDto.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .files(IODataDto.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build()).transactions(IODataDto.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .build(),
            ParticipantIODataDto.builder()
                    .participant(MockParticipants().getParticipantDto(false))
                    .batches(IODataDto.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .files(IODataDto.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build()).transactions(IODataDto.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .build())

    fun getParticipantsIOData() = listOf(
            ParticipantIOData.builder()
                    .participantId("ESSESESS")
                    .batches(IOData.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .files(IOData.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .transactions(IOData.builder()
                            .submitted(1)
                            .rejected(1.00)
                            .build())
                    .build(),
            ParticipantIOData.builder()
                    .participantId("HANDSESS")
                    .batches(IOData.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .files(IOData.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .transactions(IOData.builder()
                            .submitted(10)
                            .rejected(1.00)
                            .build())
                    .build(),
            ParticipantIOData.builder()
                    .participantId("NDEASESSXXX")
                    .batches(IOData.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .files(IOData.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .transactions(IOData.builder()
                            .submitted(0)
                            .rejected(0.00)
                            .build())
                    .build())
}